geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.title.x = element_text(size=6))+
scale_color_manual(values=cbPalette[2:7])+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_p_',pp,'.png'), width = 11.7*1.7, height = 4*1.7, units = 'cm')
}
for(pp in c(20,50,100,150,200)){
tmpdata2 = data2[data2$group=='mean'& data2$p==pp,]
plot_all = ggplot(tmpdata2, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.text.x = element_text(size=9))+
scale_color_manual(values=cbPalette[2:7])+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_p_',pp,'.png'), width = 11.7*1.7, height = 4*1.7, units = 'cm')
}
for(pp in c(20,50,100,150,200)){
tmpdata2 = data2[data2$group=='mean'& data2$p==pp,]
plot_all = ggplot(tmpdata2, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.text.x = element_text(size=12))+
scale_color_manual(values=cbPalette[2:7])+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_p_',pp,'.png'), width = 11.7*1.9, height = 4*1.9, units = 'cm')
}
for(pp in c(20,50,100,150,200)){
tmpdata2 = data2[data2$group=='mean'& data2$p==pp,]
plot_all = ggplot(tmpdata2, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.text.x = element_text(size=10),axis.text.y = element_text(size=10))+
scale_color_manual(values=cbPalette[2:7])+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_p_',pp,'.png'), width = 11.7*1.9, height = 4*1.9, units = 'cm')
}
copula_distr = 'zinegbin'
data = lapply(c(100, 120,150,200,289 ), function(n){
output_plot_all('alt1',n=n, p=127, nreps=100, part_name, copula_distr)$data
})
data = do.call(rbind, data)
data$n = as.factor(data$n)
tmpdata = data[data$group=='mean',]
plot_all = ggplot(tmpdata[tmpdata$n %in% c(100,150,200,289),], aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
#ggtitle(paste('dist', copula_distr, 'n',nn, data$model[1]))+
theme(legend.position = 'right')+
facet_wrap(~n, labeller = label_both)+
scale_color_manual(values = cbPalette[2:7])+
scale_linetype_manual(values = c(2:7))
ggsave(plot_all, filename = paste0('plot/ROC_alt1.png'), width = 11.7*1.7, height = 8*1.7, units = 'cm')
# alt2
copula_distr = 'edge_2_3'
data2 = lapply(c(100, 200, 500), function(n){
tmp = lapply(c(20, 50, 100, 150, 200), function(p){
output_plot_all('alt2',n=n, p=p, nreps=100, part_name, copula_distr)$data
})
do.call(rbind, tmp)
})
data2 = do.call(rbind, data2)
data2$p = as.factor(data2$p)
for(nn in c(100, 200, 500)){
tmpdata2 = data2[data2$group=='mean'& data2$n==nn,]
plot_all = ggplot(tmpdata2, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('sample size n =', nn))+
theme(legend.position = 'right', axis.text.x = element_text(size=10),axis.text.y = element_text(size=10))+
scale_color_manual(values=cbPalette[2:7])+
scale_linetype_manual(values=2:7)+
facet_wrap(~p, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_n_',nn,'.png'), width = 11.7*1.9, height = 8*1.9, units = 'cm')
}
for(pp in c(20,50,100,150,200)){
tmpdata2 = data2[data2$group=='mean'& data2$p==pp,]
plot_all = ggplot(tmpdata2, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.text.x = element_text(size=10),axis.text.y = element_text(size=10))+
scale_color_manual(values=cbPalette[2:7])+
scale_linetype_manual(values=2:7)+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt2_p_',pp,'.png'), width = 11.7*1.9, height = 4*1.9, units = 'cm')
}
data3 = lapply(c(100, 200, 500), function(n){
tmp = lapply(c(20, 50, 100, 150, 200), function(p){
output_plot_all('alt3',n=n, p=p, nreps=100, part_name, copula_distr)$data
})
do.call(rbind, tmp)
})
data3 = do.call(rbind, data3)
data3$p = as.factor(data3$p)
data3 = lapply(c(100, 200, 500), function(n){
tmp = lapply(c(20, 50, 100, 150, 200), function(p){
output_plot_all('alt3',n=n, p=p, nreps=100, part_name, copula_distr)$data
})
do.call(rbind, tmp)
})
data3 = do.call(rbind, data3)
data3$p = as.factor(data3$p)
for(nn in c(100, 200, 500)){
tmpdata3 = data3[data3$group=='mean'& data3$n==nn,]
plot_all = ggplot(tmpdata3, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
#    ggtitle(paste('sample size n =', nn))+
theme(legend.position = 'right', axis.text.x = element_text(size=10),axis.text.y = element_text(size=10))+
scale_color_manual(values=cbPalette[2:7])+
scale_linetype_manual(values=2:7)+
facet_wrap(~p, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt3_n_',nn,'.png'), width = 11.7*1.9,
height = 8*1.9, units = 'cm')
}
for(pp in c(20,50,100,150,200)){
tmpdata3 = data3[data3$group=='mean'& data3$p==pp,]
plot_all = ggplot(tmpdata3, aes(x=fp, y=tp, group=method, color = method,linetype=method))+
geom_line(size=1.2)+
geom_abline(slope=1, intercept=0,linetype = 3)+
xlab('False Positive')+
ylab('True Positive')+
# ggtitle(paste('number of genes p =', pp))+
theme(legend.position = 'right', axis.text.x = element_text(size=10),axis.text.y = element_text(size=10))+
scale_color_manual(values=cbPalette[2:7])+
scale_linetype_manual(values=2:7)+
facet_wrap(~n, labeller = label_both)
ggsave(plot_all, filename = paste0('plot/ROC_alt3_p_',pp,'.png'), width = 11.7*1.9,
height = 4*1.9, units = 'cm')
}
filepath = '\\\\fs2-vip\\students\\yuek\\Desktop\\micro_net' #BOX
setwd(filepath)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",  "#0072B2", "#D55E00", "#CC79A7","#F0E442")
# choose_model = c('null1', 'null2', 'alt1', 'alt2')[2]
# n = c(100, 200, 500, 289)[1]
# p = c(200, 127)[1]
# nreps=100
# run_rep = 1:10 # just compute for 10 repetitions
# part = (1:7)[1] # for the 7 methods
part_name = list('1'='CoNet', '2' = 'SparCC', '3' = 'CCLasso', '4' = 'COAT','5' = 'SPIEC-EASI', '6' = 'gCoda', '7' = 'SPRING')
# compute fp summary for null models, dist_data files
get_summary_fp = function(choose_model, n, p, nreps, part, part_name, copula_distr){
# conet and Sparcc have p values, others only fp_null
res_for_200 = do.call(rbind, lapply(1:50, function(run_rep){
load(paste0(filepath,'/dist_data/',copula_distr, '/', choose_model,'/res_n_', n, '_p_', p, '_', choose_model,
'_nreps_', nreps, '_run_rep', run_rep,'_part_', part, '.RData'))
if(part %in% c(1, 2)){
rbind(data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null, adjust = 'none', rep = run_rep),
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null_FDR, adjust = 'FDR', rep=run_rep))
}else if(part %in% c(3, 4)){
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null, adjust = 'none', rep=run_rep)
}else{
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_inv_null, adjust = 'none', rep=run_rep)
}
}))
res_for_200$method = factor(res_for_200$method, levels=do.call(c,part_name))
with(res_for_200, aggregate(fp, by = list(n=n, p=p, model= model, method=method, adjust=adjust), function(x)mean(x,na.rm=T) ))
}
library(ggplot2)
library(kableExtra)
library(cowplot)
theme_set(theme_cowplot())
# null1.1
copula_distr = 'zinegbin'
choose_model = 'null1.1'
null1.1= lapply(c(100, 150, 200, 289), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=127, nreps=500, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null1.1 = do.call(rbind, null1.1)
head(null1.1)
null1.1_none = null1.1[null1.1$adjust=='none', ]
pp = ggplot(data = null1.1_none, aes(x=n, y=x, group=method, color=method,
linetype = method))+
coord_cartesian(ylim = c(0, min(max(null1.1_none$x), 0.2)))+
geom_line(size=1)+
geom_point(size=2, shape=18)+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[1:7])+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
scale_linetype_manual(values=1:7)+
# ggtitle(paste0('dist: ', copula_distr, ', ', choose_model))+
scale_x_continuous(breaks=c(100, 150, 200, 250))
ggsave(pp, filename = paste0('plot/type_I_null1.1.png'),width =11.7*1.7, height= 11.7*1.7, units = 'cm')
filepath = '\\\\fs2-vip\\students\\yuek\\Desktop\\micro_net' #BOX
setwd(filepath)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",  "#0072B2", "#D55E00", "#CC79A7","#F0E442")
# choose_model = c('null1', 'null2', 'alt1', 'alt2')[2]
# n = c(100, 200, 500, 289)[1]
# p = c(200, 127)[1]
# nreps=100
# run_rep = 1:10 # just compute for 10 repetitions
# part = (1:7)[1] # for the 7 methods
part_name = list('1'='CoNet', '2' = 'SparCC', '3' = 'CCLasso', '4' = 'COAT','5' = 'SPIEC-EASI', '6' = 'gCoda', '7' = 'SPRING')
# compute fp summary for null models, dist_data files
get_summary_fp = function(choose_model, n, p, nreps, part, part_name, copula_distr){
# conet and Sparcc have p values, others only fp_null
res_for_200 = do.call(rbind, lapply(1:20, function(run_rep){
load(paste0(filepath,'/dist_data/',copula_distr, '/', choose_model,'/res_n_', n, '_p_', p, '_', choose_model,
'_nreps_', nreps, '_run_rep', run_rep,'_part_', part, '.RData'))
if(part %in% c(1, 2)){
rbind(data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null, adjust = 'none', rep = run_rep),
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null_FDR, adjust = 'FDR', rep=run_rep))
}else if(part %in% c(3, 4)){
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null, adjust = 'none', rep=run_rep)
}else{
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_inv_null, adjust = 'none', rep=run_rep)
}
}))
res_for_200$method = factor(res_for_200$method, levels=do.call(c,part_name))
with(res_for_200, aggregate(fp, by = list(n=n, p=p, model= model, method=method, adjust=adjust), function(x)mean(x,na.rm=T) ))
}
library(ggplot2)
library(kableExtra)
library(cowplot)
theme_set(theme_cowplot())
# null1.1
copula_distr = 'zinegbin'
choose_model = 'null1.1'
null1.1= lapply(c(100, 150, 200, 289), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=127, nreps=100, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null1.1 = do.call(rbind, null1.1)
head(null1.1)
pp = ggplot(data = null1.1, aes(x=n, y=x, group=interaction(method,adjust), color=interaction(method, adjust)))+
coord_cartesian(ylim = c(0, min(max(null1.1$x), 0.2)))+
geom_line(data=null1.1, aes(linetype = interaction(method, adjust)))+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ggtitle(paste0('dist: ', copula_distr, ', ', choose_model))
null1.1_none = null1.1[null1.1$adjust=='none', ]
pp = ggplot(data = null1.1_none, aes(x=n, y=x, group=method, color=method,
linetype = method))+
coord_cartesian(ylim = c(0, min(max(null1.1_none$x), 0.2)))+
geom_line(size=1)+
geom_point(size=2, shape=18)+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[1:7])+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
scale_linetype_manual(values=1:7)+
# ggtitle(paste0('dist: ', copula_distr, ', ', choose_model))+
scale_x_continuous(breaks=c(100, 150, 200, 250))
# null2 full
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
null2 = lapply(c(20, 50, 100, 150, 200), function(p){
null2= lapply(c(100, 200, 500), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=p, nreps=100, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null2 = do.call(rbind, null2)
null2
})
null2 = do.call(rbind, null2)
head(null2)
# null2 p=200
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
null2 = lapply(c(200), function(p){
null2= lapply(c(100, 200, 500), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=p, nreps=500, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null2 = do.call(rbind, null2)
null2
})
# null2 p=200
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
null2 = lapply(c(200), function(p){
null2= lapply(c(100, 200, 500), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=p, nreps=100, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null2 = do.call(rbind, null2)
null2
})
null2 = do.call(rbind, null2)
head(null2)
null2_none = null2[null2$adjust=='none' & null2$p==200,]
pp1 =ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=18)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[c(1:7)])+
scale_x_continuous(breaks=c(100,  200, 300,400,500))+
scale_y_continuous(breaks=c(0,0.01,0.02,0.03,0.04,0.05,0.06))
library(ggpubr)
null_plot = ggarrange(pp,pp1,labels = c('A', 'B'), common.legend = T, legend = 'right' )
null_plot
ggsave(pp1, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 11.7*1.7, units = 'cm')
null_plot
ggsave(pp1, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 11.7*1.7, units = 'cm')
ggsave(null_plot, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 11.7*1.7, units = 'cm')
ggsave(null_plot, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 8*1.7, units = 'cm')
ggsave(null_plot, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 7*1.7, units = 'cm')
pp1 =ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=19)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[c(1:7)])+
scale_x_continuous(breaks=c(100,  200, 300,400,500))+
scale_y_continuous(breaks=c(0,0.01,0.02,0.03,0.04,0.05,0.06))
pp1
pp1 =ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=20)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[c(1:7)])+
scale_x_continuous(breaks=c(100,  200, 300,400,500))+
scale_y_continuous(breaks=c(0,0.01,0.02,0.03,0.04,0.05,0.06))
pp1
ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=17)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[c(1:7)])+
scale_x_continuous(breaks=c(100,  200, 300,400,500))
ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=21)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')
filepath = '\\\\fs2-vip\\students\\yuek\\Desktop\\micro_net' #BOX
setwd(filepath)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",  "#0072B2", "#D55E00", "#CC79A7","#F0E442")
# choose_model = c('null1', 'null2', 'alt1', 'alt2')[2]
# n = c(100, 200, 500, 289)[1]
# p = c(200, 127)[1]
# nreps=100
# run_rep = 1:10 # just compute for 10 repetitions
# part = (1:7)[1] # for the 7 methods
part_name = list('1'='CoNet', '2' = 'SparCC', '3' = 'CCLasso', '4' = 'COAT','5' = 'SPIEC-EASI', '6' = 'gCoda', '7' = 'SPRING')
# compute fp summary for null models, dist_data files
get_summary_fp = function(choose_model, n, p, nreps, part, part_name, copula_distr){
# conet and Sparcc have p values, others only fp_null
res_for_200 = do.call(rbind, lapply(1:200, function(run_rep){
load(paste0(filepath,'/dist_data/',copula_distr, '/', choose_model,'/res_n_', n, '_p_', p, '_', choose_model,
'_nreps_', nreps, '_run_rep', run_rep,'_part_', part, '.RData'))
if(part %in% c(1, 2)){
rbind(data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null, adjust = 'none', rep = run_rep),
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null_FDR, adjust = 'FDR', rep=run_rep))
}else if(part %in% c(3, 4)){
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null, adjust = 'none', rep=run_rep)
}else{
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_inv_null, adjust = 'none', rep=run_rep)
}
}))
res_for_200$method = factor(res_for_200$method, levels=do.call(c,part_name))
with(res_for_200, aggregate(fp, by = list(n=n, p=p, model= model, method=method, adjust=adjust), function(x)mean(x,na.rm=T) ))
}
library(ggplot2)
library(kableExtra)
library(cowplot)
theme_set(theme_cowplot())
# null1.1
copula_distr = 'zinegbin'
choose_model = 'null1.1'
null1.1= lapply(c(100, 150, 200, 289), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=127, nreps=100, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
# compute fp summary for null models, dist_data files
get_summary_fp = function(choose_model, n, p, nreps, part, part_name, copula_distr){
# conet and Sparcc have p values, others only fp_null
res_for_200 = do.call(rbind, lapply(1:200, function(run_rep){
load(paste0(filepath,'/dist_data/',copula_distr, '/', choose_model,'/res_n_', n, '_p_', p, '_', choose_model,
'_nreps_', nreps, '_run_rep', run_rep,'_part_', part, '.RData'))
if(part %in% c(1, 2)){
rbind(data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null, adjust = 'none', rep = run_rep),
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null$fp_null_FDR, adjust = 'FDR', rep=run_rep))
}else if(part %in% c(3, 4)){
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_null, adjust = 'none', rep=run_rep)
}else{
data.frame(n=n, p=p, model = choose_model, method = part_name[[part]],
fp=roc$fp_inv_null, adjust = 'none', rep=run_rep)
}
}))
res_for_200$method = factor(res_for_200$method, levels=do.call(c,part_name))
with(res_for_200, aggregate(fp, by = list(n=n, p=p, model= model, method=method, adjust=adjust), function(x)mean(x,na.rm=T) ))
}
null1= lapply(c(100, 289), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=127, nreps=500, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
# null1.1
copula_distr = 'zinegbin'
choose_model = 'null1.1'
null1.1= lapply(c(100, 150, 200, 289), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=127, nreps=500, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null1.1 = do.call(rbind, null1.1)
head(null1.1)
null1.1_none = null1.1[null1.1$adjust=='none', ]
pp = ggplot(data = null1.1_none, aes(x=n, y=x, group=method, color=method,
linetype = method))+
coord_cartesian(ylim = c(0, min(max(null1.1_none$x), 0.2)))+
geom_line(size=1)+
geom_point(size=2, shape=18)+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[1:7])+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
scale_linetype_manual(values=1:7)+
# ggtitle(paste0('dist: ', copula_distr, ', ', choose_model))+
scale_x_continuous(breaks=c(100, 150, 200, 250))
ggsave(pp, filename = paste0('plot/type_I_null1.1.png'),width =11.7*1.7, height= 11.7*1.7, units = 'cm')
# null2 full
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
null2 = lapply(c(20, 50, 100, 150, 200), function(p){
null2= lapply(c(100, 200, 500), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=p, nreps=100, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null2 = do.call(rbind, null2)
null2
})
# null2 p=200
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
# null2 p=200
copula_distr = 'rmvnorm_mu04'
choose_model = 'null2'
null2 = lapply(c(200), function(p){
null2= lapply(c(100, 200, 500), function(n)cbind(do.call(rbind, lapply(1:7,  function(part)
get_summary_fp(choose_model,n=n, p=p, nreps=500, part=part, part_name, copula_distr=copula_distr))),
dist = copula_distr))
null2 = do.call(rbind, null2)
null2
})
null2 = do.call(rbind, null2)
head(null2)
null2_none = null2[null2$adjust=='none' & null2$p==200,]
pp1 =ggplot(data = null2_none, aes(x=n, y=x, group=method, color=method,
linetype=method))+
coord_cartesian(ylim = c(0, min(max(null2_none$x), 0.2)))+
geom_line(size=1)+
scale_linetype_manual(values=1:7)+
geom_point(size=2, shape=18)+
geom_hline(yintercept = 0.05, color=1, linetype=2)+
theme(legend.title = element_blank())+
ylab('Type I Error')+
scale_shape_manual(values=1:7)+
scale_color_manual(values=cbPalette[c(1:7)])+
scale_x_continuous(breaks=c(100,  200, 300,400,500))+
scale_y_continuous(breaks=c(0,0.01,0.02,0.03,0.04,0.05,0.06))
ggsave(pp1, filename = paste0('plot/type_I_null2.png'), width = 11.7*1.7, height = 11.7*1.7, units = 'cm')
library(ggpubr)
null_plot = ggarrange(pp,pp1,labels = c('A', 'B'), common.legend = T, legend = 'right' )
ggsave(null_plot, filename = paste0('plot/type1error.png'), width = 11.7*1.7, height = 7*1.7, units = 'cm')
